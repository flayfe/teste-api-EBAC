{
	"info": {
		"_postman_id": "1a1b8833-dba9-4bfb-aeae-b845bc678ccb",
		"name": "API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20842335"
	},
	"item": [
		{
			"name": "Usuários",
			"item": [
				{
					"name": "Cadastrar usuário com sucesso - adm",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();\r",
									"\r",
									"pm.globals.set(\"idadm\", response._id);\r",
									"\r",
									"pm.test(\"Deve retornar status code 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"})\r",
									"\r",
									"pm.test(\"Deve retornar a mensagem de cadastro realizado com sucesso\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validar o conteúdo da id - null\", function () {\r",
									"   pm.expect(response._id).to.not.null\r",
									"});\r",
									"\r",
									"pm.test(\"Validar o conteúdo da id - empty\", function () {\r",
									"   pm.expect(response._id).to.not.empty\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"Sicrano da Silva\",\r\n  \"email\": \"sicrano@qa.com.br\",\r\n  \"password\": \"teste2\",\r\n  \"administrador\": \"true\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/usuarios",
							"host": [
								"{{url}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cadastrar usuário com sucesso - not adm",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();\r",
									"pm.globals.set(\"idnotadm\", response._id);\r",
									"\r",
									"pm.test(\"Deve retornar status code 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"})\r",
									"\r",
									"pm.test(\"Deve retornar a mensagem de cadastro realizado com sucesso\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validar o conteúdo da id - null\", function () {\r",
									"   pm.expect(response._id).to.not.null\r",
									"});\r",
									"\r",
									"pm.test(\"Validar o conteúdo da id - empty\", function () {\r",
									"   pm.expect(response._id).to.not.empty\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"Beltrano dos Santos\",\r\n  \"email\": \"beltrano@qa.com.br\",\r\n  \"password\": \"teste5\",\r\n  \"administrador\": \"false\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/usuarios",
							"host": [
								"{{url}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cadastrar usuário com e-mail já cadastrado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();\r",
									"\r",
									"pm.test(\"Deve retornar status code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Deve retornar a mensagem que o email já está sendo usado\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Este email já está sendo usado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"Baltazar da Silva\",\r\n  \"email\": \"sicrano@qa.com.br\",\r\n  \"password\": \"teste2\",\r\n  \"administrador\": \"true\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/usuarios",
							"host": [
								"{{url}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar usuários cadastrados",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Deve retornar status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/usuarios",
							"host": [
								"{{url}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar usuário por ID - encontrado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();\r",
									"\r",
									"pm.test(\"Deve retornar status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Validar id do response body\", function () {\r",
									"    pm.expect(response._id).to.be.equal(pm.globals.get(\"idadm\"));\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/usuarios/{{idadm}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"usuarios",
								"{{idadm}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar usuário por ID - não encontrado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();\r",
									"\r",
									"pm.test(\"Deve retornar status code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Deve retornar a mensagem de usuário não encontrado\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Usuário não encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/usuarios/idinvalida",
							"host": [
								"{{url}}"
							],
							"path": [
								"usuarios",
								"idinvalida"
							]
						}
					},
					"response": []
				},
				{
					"name": "Editar usuário com sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();\r",
									"\r",
									"pm.test(\"Deve retornar status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Deve retornar a mensagem de registro alterado com sucesso\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Registro alterado com sucesso\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"Baltazar da Silva\",\r\n  \"email\": \"baltazar@qa.com.br\",\r\n  \"password\": \"novasenha\",\r\n  \"administrador\": \"true\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/usuarios/{{idnotadm}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"usuarios",
								"{{idnotadm}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Editar usuário com ID não encontrado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();\r",
									"\r",
									"pm.test(\"Deve retornar status code 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"})\r",
									"\r",
									"pm.test(\"Deve retornar a mensagem de cadastro realizado com sucesso\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"Betina da Soares\",\r\n  \"email\": \"betina@qa.com.br\",\r\n  \"password\": \"novasenha\",\r\n  \"administrador\": \"false\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/usuarios/outroID",
							"host": [
								"{{url}}"
							],
							"path": [
								"usuarios",
								"outroID"
							]
						}
					},
					"response": []
				},
				{
					"name": "Editar usuário com email ja cadastrado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();\r",
									"\r",
									"pm.test(\"Deve retornar status code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Deve retornar a mensagem de email já está sendo usado\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Este email já está sendo usado\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"Sislene de Matos\",\r\n  \"email\": \"sicrano@qa.com.br\",\r\n  \"password\": \"novasenha\",\r\n  \"administrador\": \"true\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/usuarios/{{idnotadm}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"usuarios",
								"{{idnotadm}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Excluir usuário com sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"pm.test(\"Deve retornar status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Deve retornar a mensagem de registro excluído com sucesso\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Registro excluído com sucesso\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/usuarios/{{idnotadm}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"usuarios",
								"{{idnotadm}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Excluir usuário com ID não encontrada",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();\r",
									"\r",
									"pm.test(\"Deve retornar status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Deve retornar a mensagem de nenhum registro excluído\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Nenhum registro excluído\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/usuarios/idinvalida",
							"host": [
								"{{url}}"
							],
							"path": [
								"usuarios",
								"idinvalida"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}